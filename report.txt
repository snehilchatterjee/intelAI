Scale factor used:




Detection training approach:

Select an image from the dataset and randomly select a scale factor between [1.6 and 3). This method is very effective as it will be impossible for the model to overfit since it can't memorise the dataset image as it will change verytime with a different scale factor.
This selection is done using beta distribution.

why beta distribution:

We want to increase the liklihood of getting lower values so that model can accurately tell when image is pixelated

Two methods proposed for efficient and fast detection:

1) MobileNetV3_small

why this choice ?

small size, fast and suitable for embedded systems make it most suitable choice

2) Canny edge detection + mobilenetv3_small

same as above but using canny edge detection for pre processing

{formula for canny edge detection}

why this choice ?

This choice can be very useful when the image is too pixelated (> 3x scale factor) then an algorithmic approach can be used rather than using machine learning. here we are using machine learning along with edge detection to demonstrate its capability for accurately detection pixelated images (we will see its potential use and how it beats the earlier model in our next section)


